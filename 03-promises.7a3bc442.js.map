{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAyBvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CAlCbL,EAAQa,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOjB,EAAQkB,SAASb,MAAMc,OAC1C,MAAMC,EAAOH,OAAOjB,EAAQkB,SAASE,KAAKD,OACpCE,EAASJ,OAAOjB,EAAQkB,SAASG,OAAOF,OAE9C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,IACzB,GAAZA,IACFN,GAASI,GAEXjB,EAAcmB,EAAUN,GACrBO,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA0B,OAAOC,QAAQ,qBAAqBrB,QAAeC,MAAU,IAE9DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA0B,OAAOG,QAAQ,oBAAoBvB,QAAeC,MAAU,IAGlES,EAAEc,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let delay = Number(formRef.elements.delay.value);\n  const step = Number(formRef.elements.step.value);\n  const amount = Number(formRef.elements.amount.value);\n\n  for (let position = 1; position <= amount; position++) {\n    if (position != 1) {\n      delay += step;\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","elements","value","step","amount","position1","then","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.7a3bc442.js.map"}